{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\origamid-dogs\\\\src\\\\Components\\\\Login\\\\FormResetarSenha\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useForm from \"../../../Hooks/useForm\";\nimport useFetch from \"../../../Hooks/useFetch\";\nimport Button from \"../../shared/Button\";\nimport Input from \"../../shared/Input\";\nimport Error from \"../../shared/Error\";\nimport { passwordResetPost } from \"../../../Services/password\";\nimport { Form } from \"./styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormResetarSenha({\n  key,\n  login\n}) {\n  _s();\n  const password = useForm();\n  const {\n    error,\n    loading,\n    request\n  } = useFetch();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password.validate()) {\n      const {\n        url,\n        options\n      } = passwordResetPost({\n        key: key,\n        login: login,\n        password: password.value\n      });\n      const {\n        response,\n        json\n      } = await request(url, options);\n      if (response.ok) navigate(\"/login\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Nova senha\",\n      type: \"password\",\n      name: \"passwords\",\n      ...password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Redefinir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FormResetarSenha, \"XZVDTQ798oYiH4Bv35KvNvb1pY8=\", false, function () {\n  return [useForm, useFetch, useNavigate];\n});\n_c = FormResetarSenha;\nvar _c;\n$RefreshReg$(_c, \"FormResetarSenha\");","map":{"version":3,"names":["React","useForm","useFetch","Button","Input","Error","passwordResetPost","Form","useNavigate","jsxDEV","_jsxDEV","FormResetarSenha","key","login","_s","password","error","loading","request","navigate","handleSubmit","e","preventDefault","validate","url","options","value","response","json","ok","onSubmit","children","label","type","name","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["E:/GitHub/origamid-dogs/src/Components/Login/FormResetarSenha/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport useForm from \"../../../Hooks/useForm\";\r\nimport useFetch from \"../../../Hooks/useFetch\";\r\n\r\nimport Button from \"../../shared/Button\";\r\nimport Input from \"../../shared/Input\";\r\nimport Error from \"../../shared/Error\";\r\n\r\nimport { passwordResetPost } from \"../../../Services/password\";\r\n\r\nimport { Form } from \"./styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function FormResetarSenha({ key, login }) {\r\n  const password = useForm();\r\n  const { error, loading, request } = useFetch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password.validate()) {\r\n      const { url, options } = passwordResetPost({\r\n        key: key,\r\n        login: login,\r\n        password: password.value,\r\n      });\r\n      const { response, json } = await request(url, options);\r\n      if (response.ok) navigate(\"/login\");\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        label=\"Nova senha\"\r\n        type=\"password\"\r\n        name=\"passwords\"\r\n        {...password}\r\n      />\r\n      {loading ? (\r\n        <Button disabled>Carregando...</Button>\r\n      ) : (\r\n        <Button>Redefinir</Button>\r\n      )}\r\n      {error && <Error error={error} />}\r\n    </Form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SAASC,iBAAiB,QAAQ,4BAA4B;AAE9D,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAMC,QAAQ,GAAGd,OAAO,CAAC,CAAC;EAC1B,MAAM;IAAEe,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAC9C,MAAMiB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,QAAQ,CAACQ,QAAQ,CAAC,CAAC,EAAE;MACvB,MAAM;QAAEC,GAAG;QAAEC;MAAQ,CAAC,GAAGnB,iBAAiB,CAAC;QACzCM,GAAG,EAAEA,GAAG;QACRC,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA,QAAQ,CAACW;MACrB,CAAC,CAAC;MACF,MAAM;QAAEC,QAAQ;QAAEC;MAAK,CAAC,GAAG,MAAMV,OAAO,CAACM,GAAG,EAAEC,OAAO,CAAC;MACtD,IAAIE,QAAQ,CAACE,EAAE,EAAEV,QAAQ,CAAC,QAAQ,CAAC;IACrC;EACF,CAAC;EACD,oBACET,OAAA,CAACH,IAAI;IAACuB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BrB,OAAA,CAACN,KAAK;MACJ4B,KAAK,EAAC,YAAY;MAClBC,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,WAAW;MAAA,GACZnB;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACDrB,OAAO,gBACNP,OAAA,CAACP,MAAM;MAACoC,QAAQ;MAAAR,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEvC5B,OAAA,CAACP,MAAM;MAAA4B,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1B,EACAtB,KAAK,iBAAIN,OAAA,CAACL,KAAK;MAACW,KAAK,EAAEA;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX;AAACxB,EAAA,CAjCuBH,gBAAgB;EAAA,QACrBV,OAAO,EACYC,QAAQ,EAC3BM,WAAW;AAAA;AAAAgC,EAAA,GAHN7B,gBAAgB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}