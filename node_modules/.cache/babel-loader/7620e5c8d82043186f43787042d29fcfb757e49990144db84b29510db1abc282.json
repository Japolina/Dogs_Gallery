{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\origamid-dogs\\\\src\\\\Components\\\\Feed\\\\FeedPhotos.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useFetch from \"../../Hooks/useFetch\";\nimport { photosGet } from \"../../Services/photo\";\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/Loading\";\nimport FeedPhotoItem from \"./FeedPhotoItem\";\nimport { List } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedPhotos({\n  setInfinite,\n  setModalPhoto,\n  page = 1,\n  total = 6,\n  user = 0\n}) {\n  _s();\n  const {\n    data,\n    loading,\n    error,\n    request\n  } = useFetch();\n  const getPhotos = React.useCallback(async () => {\n    const {\n      url,\n      options\n    } = photosGet({\n      page,\n      total,\n      user\n    });\n    const {\n      response,\n      json\n    } = await request(url, options);\n    if (response && response.ok && json.length < total) setInfinite(false);\n  }, [request, setInfinite, page, total, user]);\n  React.useEffect(() => {\n    getPhotos();\n  }, [getPhotos]);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (data) return /*#__PURE__*/_jsxDEV(List, {\n    children: data.map(foto => /*#__PURE__*/_jsxDEV(FeedPhotoItem, {\n      photo: foto,\n      setModalPhoto: setModalPhoto\n    }, foto.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n  return null;\n}\n_s(FeedPhotos, \"ZjlJjZJNKmcMk5nAaEdMY/ymMP0=\", false, function () {\n  return [useFetch];\n});\n_c = FeedPhotos;\nexport default FeedPhotos;\nvar _c;\n$RefreshReg$(_c, \"FeedPhotos\");","map":{"version":3,"names":["React","useFetch","photosGet","Error","Loading","FeedPhotoItem","List","jsxDEV","_jsxDEV","FeedPhotos","setInfinite","setModalPhoto","page","total","user","_s","data","loading","error","request","getPhotos","useCallback","url","options","response","json","ok","length","useEffect","fileName","_jsxFileName","lineNumber","columnNumber","children","map","foto","photo","id","_c","$RefreshReg$"],"sources":["E:/GitHub/origamid-dogs/src/Components/Feed/FeedPhotos.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport { photosGet } from \"../../Services/photo\";\r\n\r\nimport Error from \"../shared/Error\";\r\nimport Loading from \"../shared/Loading\";\r\n\r\nimport FeedPhotoItem from \"./FeedPhotoItem\";\r\n\r\nimport { List } from \"./styles\";\r\n\r\nfunction FeedPhotos({\r\n  setInfinite,\r\n  setModalPhoto,\r\n  page = 1,\r\n  total = 6,\r\n  user = 0,\r\n}) {\r\n  const { data, loading, error, request } = useFetch();\r\n\r\n  const getPhotos = React.useCallback(async () => {\r\n    const { url, options } = photosGet({ page, total, user });\r\n    const { response, json } = await request(url, options);\r\n    if (response && response.ok && json.length < total) setInfinite(false);\r\n  }, [request, setInfinite, page, total, user]);\r\n\r\n  React.useEffect(() => {\r\n    getPhotos();\r\n  }, [getPhotos]);\r\n\r\n  if (error) return <Error error={error} />;\r\n  if (loading) return <Loading />;\r\n  if (data)\r\n    return (\r\n      <List>\r\n        {data.map((foto) => (\r\n          <FeedPhotoItem\r\n            key={foto.id}\r\n            photo={foto}\r\n            setModalPhoto={setModalPhoto}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n\r\n  return null;\r\n}\r\n\r\nexport default FeedPhotos;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,SAAS,QAAQ,sBAAsB;AAEhD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,SAASC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,UAAUA,CAAC;EAClBC,WAAW;EACXC,aAAa;EACbC,IAAI,GAAG,CAAC;EACRC,KAAK,GAAG,CAAC;EACTC,IAAI,GAAG;AACT,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAEpD,MAAMmB,SAAS,GAAGpB,KAAK,CAACqB,WAAW,CAAC,YAAY;IAC9C,MAAM;MAAEC,GAAG;MAAEC;IAAQ,CAAC,GAAGrB,SAAS,CAAC;MAAEU,IAAI;MAAEC,KAAK;MAAEC;IAAK,CAAC,CAAC;IACzD,MAAM;MAAEU,QAAQ;MAAEC;IAAK,CAAC,GAAG,MAAMN,OAAO,CAACG,GAAG,EAAEC,OAAO,CAAC;IACtD,IAAIC,QAAQ,IAAIA,QAAQ,CAACE,EAAE,IAAID,IAAI,CAACE,MAAM,GAAGd,KAAK,EAAEH,WAAW,CAAC,KAAK,CAAC;EACxE,CAAC,EAAE,CAACS,OAAO,EAAET,WAAW,EAAEE,IAAI,EAAEC,KAAK,EAAEC,IAAI,CAAC,CAAC;EAE7Cd,KAAK,CAAC4B,SAAS,CAAC,MAAM;IACpBR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,IAAIF,KAAK,EAAE,oBAAOV,OAAA,CAACL,KAAK;IAACe,KAAK,EAAEA;EAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACzC,IAAIf,OAAO,EAAE,oBAAOT,OAAA,CAACJ,OAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC/B,IAAIhB,IAAI,EACN,oBACER,OAAA,CAACF,IAAI;IAAA2B,QAAA,EACFjB,IAAI,CAACkB,GAAG,CAAEC,IAAI,iBACb3B,OAAA,CAACH,aAAa;MAEZ+B,KAAK,EAAED,IAAK;MACZxB,aAAa,EAAEA;IAAc,GAFxBwB,IAAI,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;EAGX,OAAO,IAAI;AACb;AAACjB,EAAA,CAnCQN,UAAU;EAAA,QAOyBR,QAAQ;AAAA;AAAAqC,EAAA,GAP3C7B,UAAU;AAqCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}