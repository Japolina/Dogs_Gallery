{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nfunction useMedia(media) {\n  _s();\n  const [match, setMatch] = React.useState(null);\n  const changeMatch = React.useCallback(() => {\n    const {\n      matches\n    } = window.matchMedia(media);\n    setMatch(matches);\n  }, [media]);\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", changeMatch);\n    return () => {\n      window.removeEventListener(\"resize\", changeMatch);\n    };\n  }, [media, changeMatch]);\n  return match;\n}\n_s(useMedia, \"53VCyC+NFIJoHcEdGmZyBNWFoRA=\");\nexport default useMedia;","map":{"version":3,"names":["React","useMedia","media","_s","match","setMatch","useState","changeMatch","useCallback","matches","window","matchMedia","useEffect","addEventListener","removeEventListener"],"sources":["E:/GitHub/origamid-dogs/src/Hooks/useMedia.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction useMedia(media) {\r\n  const [match, setMatch] = React.useState(null);\r\n\r\n  const changeMatch = React.useCallback(() => {\r\n    const { matches } = window.matchMedia(media);\r\n    setMatch(matches);\r\n  }, [media]);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", changeMatch);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeMatch);\r\n    };\r\n  }, [media, changeMatch]);\r\n\r\n  return match;\r\n}\r\n\r\nexport default useMedia;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMC,WAAW,GAAGP,KAAK,CAACQ,WAAW,CAAC,MAAM;IAC1C,MAAM;MAAEC;IAAQ,CAAC,GAAGC,MAAM,CAACC,UAAU,CAACT,KAAK,CAAC;IAC5CG,QAAQ,CAACI,OAAO,CAAC;EACnB,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEXF,KAAK,CAACY,SAAS,CAAC,MAAM;IACpBF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEN,WAAW,CAAC;IAE9C,OAAO,MAAM;MACXG,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEP,WAAW,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,CAACL,KAAK,EAAEK,WAAW,CAAC,CAAC;EAExB,OAAOH,KAAK;AACd;AAACD,EAAA,CAjBQF,QAAQ;AAmBjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}